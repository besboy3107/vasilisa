name: Generate Daily Articles

on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch: {}

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: content-generation
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Preflight env check
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}
          PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
          IMAGE_PROVIDER: ${{ vars.IMAGE_PROVIDER || 'unsplash' }}
        run: |
          set -e
          echo "IMAGE_PROVIDER=${IMAGE_PROVIDER:-unsplash}"
          if [ -z "$OPENAI_API_KEY" ]; then echo "OPENAI_API_KEY is EMPTY"; exit 1; else echo "OPENAI_API_KEY is SET"; fi
          if [ "${IMAGE_PROVIDER:-unsplash}" = "unsplash" ]; then
            if [ -z "$UNSPLASH_ACCESS_KEY" ]; then echo "UNSPLASH_ACCESS_KEY is EMPTY"; exit 1; else echo "UNSPLASH_ACCESS_KEY is SET"; fi
          else
            if [ -z "$PEXELS_API_KEY" ]; then echo "PEXELS_API_KEY is EMPTY"; exit 1; else echo "PEXELS_API_KEY is SET"; fi
          fi

      - name: Prepare git config
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Generate content
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}
          PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
          IMAGE_PROVIDER: ${{ vars.IMAGE_PROVIDER || 'unsplash' }}
          CONTENT_BASE_DIR: content
          ARTICLES_PER_DAY: 10
          INLINE_IMAGES: 2
        run: |
          python -m content_bot generate --count ${ARTICLES_PER_DAY}

      - name: Commit and push changes
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -e
          git add content
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore(content): add daily generated articles"
            git fetch origin "$BRANCH_NAME"
            git pull --rebase origin "$BRANCH_NAME" || true
            git push origin HEAD:"$BRANCH_NAME"
          fi
